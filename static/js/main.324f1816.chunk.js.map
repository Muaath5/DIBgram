{"version":3,"sources":["dibgram/TdWeb/tdlib.js","dibgram/TdWeb/config.js","dibgram/auth/auth.js","dibgram/messenger/messengerWindow.js","dibgram/ui/elements/highlighted-button.js","dibgram/ui/elements/underlined-input.js","dibgram/auth/ui.js","App.js","reportWebVitals.js","index.js"],"names":["TdLib","log","use_test_dc","log_updates","log_queries","TdClient","useDatabase","onUpdate","update","console","forEach","h","sendRequest","type","handler","undefined","push","query","send","registerUpdateHandler","credentials","api_id","api_hash","auth_state","number","code","pass","first","last","MessengerWindow","BigHighlightedButton","props","className","onClick","children","UnderlinedInput","args","handleFocus","setState","inactive","titleClass","getTitleClass","handleBlur","mouseX","handleMouseDown","e","nativeEvent","offsetX","handleKeyDown","key","onEnterKeyPressed","state","autoFocus","focus","this","value","invalid","style","title","onChange","onMouseDown","onFocus","onBlur","onKeyDown","maxLength","onCopy","disableCopy","preventDefault","React","Component","initialAuthState","setInitialAuthState","MainApp","step","includes","info","code_info","AuthWindowStepPhoneNumber","handlePNFieldChange","event","target","submitNumber","a","Auth","givePhoneNumber","catch","reason","textUnderField","message","id","AuthWindowStepCode","handleCodeFieldChange","length","handleContinueButton","checkAuthCode","phone_number","AuthWindowStepPassword","handlePasswordFieldChange","password","check2FACode","password_hint","href","AuthWindowStepRegister","handleFirstNameFieldChange","firstName","handleLastNameFieldChange","lastName","registerNewAccount","initializeTdLib","then","res","App","data-theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.324f1816.chunk.js","sourcesContent":["import TdClient from 'tdweb';\nimport {getConfig} from './config';\n\n/**\n * Provides options to communicate with the Tdweb library\n */\nexport default class TdLib {\n    /** @type TdClient */\n    static #tdClient;\n    /** @type {[string: Array<Function>]} */\n    static #updateHandlers={};\n\n    /**\n     * Creates the instance of Tdweb\n     */\n    static async initializeTdLib() {\n        const {log}= getConfig();\n        TdLib.#tdClient= new TdClient({\n            useDatabase: true,\n            onUpdate: function (update) {\n                if(log.log_updates) {\n                    console.log('Update: ',update);\n                }\n                if(TdLib.#updateHandlers[update['@type']]){\n                    TdLib.#updateHandlers[update['@type']].forEach(h => h(update));\n                }\n            }\n        });\n        return await TdLib.sendRequest({'@type': 'getAuthorizationState'});\n    }\n\n    /**\n     * Listen for updates from TdLib\n     * @param {string} type The type of the update to listen to. Look for TdLib API docs for types\n     * @param {Function} handler The function that gets called with the update object when the update is received\n     */\n    static registerUpdateHandler(type, handler) {\n        if(TdLib.#updateHandlers[type]===undefined){\n            TdLib.#updateHandlers[type]= [];\n        }\n        TdLib.#updateHandlers[type].push(handler);\n    }\n\n    /**\n     * Send a request to the TdLib instance\n     * If the query contains an `@extra` field, the same field will be added to the result\n     * @param {import('tdweb').TdObject} query The request to send. Consult TdLib & JSON interface API for help.\n     */\n    static sendRequest(query) {\n        const {log}= getConfig();\n        if(log.log_queries) {\n            console.log('Query: ',query);\n        }\n        return TdLib.#tdClient.send(query);\n    }\n}","export function getCredentials() {return {api_id: 3022678,api_hash: 'd7b7676a82906a6182f4a5e5e9555673'};}export function getConfig() {return {use_test_dc: false,log: {log_updates: false,log_queries: false}};}\n","import TdLib from '../TdWeb/tdlib';\nimport {getCredentials, getConfig} from '../TdWeb/config';\n\nTdLib.registerUpdateHandler('updateAuthorizationState',function (update) {\n    const credentials= getCredentials();\n    const auth_state= update['authorization_state'];\n    \n    if(auth_state['@type']==='authorizationStateWaitEncryptionKey'){\n        TdLib.sendRequest({'@type': 'checkDatabaseEncryptionKey', 'encryption_key': ''});\n    }\n    if(auth_state['@type']==='authorizationStateWaitTdlibParameters'){\n        TdLib.sendRequest({\n            '@type': 'setTdlibParameters',\n            'parameters': {\n                'database_directory': 'tdlib',\n                'use_message_database': true,\n                'use_secret_chats': true,\n                'api_id': credentials.api_id,\n                'api_hash': credentials.api_hash,\n                'system_language_code': 'en',\n                'device_model': 'Web',\n                'application_version': '0.0.1',\n                'enable_storage_optimizer': true,\n                'use_test_dc': getConfig().use_test_dc,\n            }\n        });\n    }\n});\n\nexport default class {\n    static async givePhoneNumber(number) {\n        return await TdLib.sendRequest({'@type': 'setAuthenticationPhoneNumber', 'phone_number': number});\n    }\n    static async checkAuthCode(code) {\n        return await TdLib.sendRequest({'@type': 'checkAuthenticationCode', 'code': code});\n    }\n    static async check2FACode(pass) {\n        return await TdLib.sendRequest({'@type': 'checkAuthenticationPassword', 'password': pass});\n    }\n    static async registerNewAccount(first, last) {\n        return await TdLib.sendRequest({'@type': 'registerUser', 'first_name': first, 'last_name': last});\n    }\n}","import React from 'react';\n\nexport function MessengerWindow () {\n    return (\n        <div>This is messenger window. You&apos;ve authenticated successfully!</div>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function BigHighlightedButton (props) {\n    return (\n        <button className=\"big-highlighted-button\" onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n}\nBigHighlightedButton.propTypes= {\n    onClick: PropTypes.func,\n    children: PropTypes.node.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class UnderlinedInput extends React.Component {\n    constructor(args) {\n        super(args);\n\n        this.state= {\n            inactive: false,\n            mouseX: '50%',\n            titleClass: this.getTitleClass(this.props.autoFocus)\n        };\n    }\n\n    getTitleClass (focus) {\n        return (focus || (!!this.props.value)) ? 'title top' : 'title placeholder';\n    }\n\n    render () {\n        var className='underlined-input';\n        if(this.state.inactive) {\n            className+=' inactive';\n        }\n        if(this.props.autoFocus) {\n            className+=' autoFocus';\n        }\n        if(this.props.invalid) {\n            className+=' invalid';\n        }\n        return (\n            <div className={className}\n                style={{'--mouse-left': this.state.mouseX || '50%'}}>\n                { this.props.title ? (\n                    <div className={this.state.titleClass}>{this.props.title}</div>\n                ) : null }\n                <input \n                    type={this.props.type} \n                    onChange={this.props.onChange} \n                    value={this.props.value}\n                    onMouseDown={this.handleMouseDown}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    autoFocus={this.props.autoFocus || false}\n                    onKeyDown={this.handleKeyDown}\n                    maxLength={this.props.maxLength}\n                    onCopy={e=> {\n                        if(this.props.disableCopy) {\n                            e.preventDefault();\n                        }\n                    }}/>\n                <div className=\"underline\"></div>\n            </div>\n        );\n    }\n\n    handleFocus =()=>{\n        this.setState({\n            inactive: false,\n            titleClass: this.getTitleClass(true)\n        });\n    }\n    handleBlur =()=>{\n        this.setState({\n            inactive: true, \n            mouseX: '50%',\n            titleClass: this.getTitleClass(false)\n        });\n    }\n    handleMouseDown =(e)=>{\n        this.setState({\n            mouseX: e.nativeEvent.offsetX+'px'\n        });\n    }\n    handleKeyDown =(e)=>{\n        if(e.key=='Enter') {\n            this.props.onEnterKeyPressed && this.props.onEnterKeyPressed();\n        }\n    }\n\n    static propTypes = {\n        type: PropTypes.oneOf(['text', 'number', 'password', 'email', 'url']).isRequired,\n        onChange: PropTypes.func,\n        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        maxLength: PropTypes.number,\n        active: PropTypes.bool,\n        autoFocus: PropTypes.bool,\n        onEnterKeyPressed: PropTypes.func,\n        title: PropTypes.string,\n        invalid: PropTypes.bool,\n        disableCopy: PropTypes.bool,\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TdLib from '../TdWeb/tdlib';\nimport Auth from './auth';\nimport {MessengerWindow} from '../messenger/messengerWindow';\n\nimport BigHighlightedButton from '../ui/elements/highlighted-button';\nimport UnderlinedInput from '../ui/elements/underlined-input';\n\nvar initialAuthState = {'@type': undefined};\nexport function setInitialAuthState(state) {\n    initialAuthState=state;\n}\n\nexport class MainApp extends React.Component {\n    constructor(args) {\n        super(args);\n\n        this.state= {\n            step: initialAuthState\n        };\n        // eslint-disable-next-line no-func-assign\n        setInitialAuthState= state=> {\n            this.setState({step: state});\n        };\n\n        TdLib.registerUpdateHandler('updateAuthorizationState', update => {\n            const states= [\n                'authorizationStateWaitPhoneNumber',\n                'authorizationStateWaitCode',\n                'authorizationStateWaitPassword',\n                'authorizationStateWaitRegistration',\n                'authorizationStateReady',\n                'authorizationStateClosed',\n            ];\n            const state=update['authorization_state'];\n            if(states.includes(state['@type'])) {\n                this.setState({step: state});\n            }\n        });\n    }\n    \n    render () {\n        switch (this.state.step['@type']) {\n        case 'authorizationStateWaitPhoneNumber':\n            return (\n                <AuthWindowStepPhoneNumber/>\n            );\n\n        case 'authorizationStateWaitCode':\n            return (\n                <AuthWindowStepCode info={this.state.step.code_info}/>\n            );\n\n        case 'authorizationStateWaitPassword':\n            return (\n                <AuthWindowStepPassword info={this.state.step}/>\n            );\n\n        case 'authorizationStateWaitRegistration':\n            return (\n                <AuthWindowStepRegister/>\n            );\n\n        case 'authorizationStateReady':\n            return (\n                <MessengerWindow/>\n            );\n\n        case 'authorizationStateClosed':\n            return (\n                <p>This session is closed.</p>\n            );\n        \n        default:\n            return <p>Loading...</p>;\n        }\n    }\n}\n\nclass AuthWindowStepPhoneNumber extends React.Component {\n    constructor (args) {\n        super(args);\n\n        this.state= {\n            number: ''\n        };\n    }\n    handlePNFieldChange = (event) => {\n        this.setState({number: event.target.value});\n    }\n    submitNumber= async () => {\n        Auth.givePhoneNumber(this.state.number).catch(reason=> {\n            this.setState({textUnderField: reason.message});\n        });\n    }\n    render () {\n        return (\n            <div id=\"auth\" className=\"auth-step-phoneNumber\">\n\n                <h2>Your Phone Number</h2>\n\n                <p className=\"description\">\n                    Please confirm your country code and enter your mobile phone number.\n                </p>\n\n                <UnderlinedInput \n                    type=\"text\" \n                    value={this.state.number} \n                    autoFocus={true}\n                    onChange={this.handlePNFieldChange}\n                    onEnterKeyPressed={this.submitNumber}/>\n\n                <div className=\"status\">\n                    {this.state.textUnderField || <span>&nbsp;</span>}\n                </div>\n\n                <BigHighlightedButton \n                    onClick={this.submitNumber}>\n                    NEXT\n                </BigHighlightedButton>\n            </div>\n        );\n    }\n}\n\nclass AuthWindowStepCode extends React.Component {\n    constructor (args) {\n        super(args);\n\n        this.state= {\n            code: '',\n            invalid: false,\n        };\n    }\n    handleCodeFieldChange= (event) => {\n        this.setState({\n            code: event.target.value,\n            invalid: false\n        });\n        if(event.target.value.length==this.props.info.type.length) {\n            this.handleContinueButton(event.target.value);\n        }\n    }\n    handleContinueButton= (code) => {\n        if(typeof code != 'string') {\n            code= undefined;\n        }\n        code = code || this.state.code;\n        if(code.length!=this.props.info.type.length) return;\n\n        Auth.checkAuthCode(code).catch(reason=> {\n            if(reason.message==='PHONE_CODE_INVALID'){\n                this.setState({\n                    textUnderField: 'You have entered an invalid code.',\n                    invalid: true\n                });\n            }\n            else\n                this.setState({\n                    textUnderField: reason.message,\n                    invalid: true\n                });\n        });\n    }\n    render () {\n        var message= (this.props.info.type['@type']=='authenticationCodeTypeSms') ?\n            (<p className=\"description\">\n                A code was sent <strong>via SMS</strong> to your phone number.\n            </p>) \n            :\n            (<p className=\"description\">\n                A code was sent <strong>via Telegram</strong> to your other devices, if you have any connected.\n            </p>);\n            \n        return (\n            <div id=\"auth\" className=\"auth-step-code\">\n\n                <h2>{this.props.info.phone_number}</h2>\n\n                {message}\n\n                <UnderlinedInput \n                    type=\"text\" \n                    value={this.state.code} \n                    onChange={this.handleCodeFieldChange}\n                    autoFocus={true}\n                    title=\"Code\"\n                    maxLength={this.props.info.type.length}\n                    onEnterKeyPressed={this.handleContinueButton}\n                    invalid={this.state.invalid}/>\n\n                <div className=\"status\">\n                    {this.state.textUnderField || ''}\n                </div>\n\n                <BigHighlightedButton \n                    onClick={this.handleContinueButton}>\n                    NEXT\n                </BigHighlightedButton>\n            </div>\n        );\n    }\n}\nAuthWindowStepCode.propTypes= {\n    info: PropTypes.object\n};\nclass AuthWindowStepPassword extends React.Component {\n    constructor (args) {\n        super(args);\n\n        this.state= {\n            password: '',\n            invalid: false\n        };\n    }\n    handlePasswordFieldChange= (event) => {\n        this.setState({\n            password: event.target.value,\n            invalid: false,\n        });\n    }\n    handleContinueButton= async () => {\n        Auth.check2FACode(this.state.password).catch(reason=> {\n            if(reason.message=='PASSWORD_HASH_INVALID') \n                this.setState({\n                    textUnderField: 'You have entered a wrong password.',\n                    invalid: true,\n                });\n            else\n                this.setState({\n                    textUnderField: reason.message,\n                    invalid: true,\n                });\n        });\n    }\n    render () {\n        return (\n            <div id=\"auth\" className=\"auth-step-password\">\n                <div className=\"content\">\n\n                    <h2>Cloud password check</h2>\n\n                    <p className=\"description\">\n                        Please enter your cloud password.\n                    </p>\n\n                    <UnderlinedInput \n                        type=\"text\" \n                        value={this.state.password} \n                        onChange={this.handlePasswordFieldChange}\n                        autoFocus={true} \n                        title=\"Your cloud password\"\n                        onEnterKeyPressed={this.handleContinueButton}\n                        disableCopy={true}\n                        invalid={this.state.invalid}/>\n\n                    <div className=\"hint\">\n                        Hint: {this.props.info.password_hint}\n                    </div>\n\n                    <div className=\"forgot-password\">\n                        <a href=\"#\">Forgot password?</a>\n                    </div>\n\n                    <div className=\"status\">\n                        {this.state.textUnderField || <i>&nbsp;</i>}\n                    </div>\n\n                    <BigHighlightedButton \n                        onClick={this.handleContinueButton}>\n                        SUBMIT\n                    </BigHighlightedButton>\n                </div>\n            </div>\n        );\n    }\n}\nAuthWindowStepPassword.propTypes= {\n    info: PropTypes.object\n};\n\nclass AuthWindowStepRegister extends React.Component {\n    constructor (args) {\n        super(args);\n\n        this.state= {\n            firstName: '',\n            lastName: ''\n        };\n    }\n    handleFirstNameFieldChange= (event) => {\n        this.setState({firstName: event.target.value});\n    }\n    handleLastNameFieldChange= (event) => {\n        this.setState({lastName: event.target.value});\n    }\n    handleContinueButton= async () => {\n        await Auth.registerNewAccount(this.state.firstName, this.state.lastName).catch(reason=> {\n            this.setState({textUnderField: reason.message});\n        });\n    }\n    render () {\n        return (\n            <div id=\"auth\" className=\"auth-step-signup\">\n                <div className=\"content\">\n\n                    <h2>Your info</h2>\n\n                    <p className=\"description\">\n                        Please enter your name and upload a photo.\n                    </p>\n\n                    <UnderlinedInput \n                        type=\"text\" \n                        value={this.state.firstName} \n                        onChange={this.handleFirstNameFieldChange}\n                        autoFocus={true} />\n\n                    <UnderlinedInput \n                        type=\"text\" \n                        value={this.state.lastName} \n                        onChange={this.handleLastNameFieldChange} />\n\n                    <div className=\"status\">\n                        {this.state.textUnderField || ''}\n                    </div>\n\n                    <BigHighlightedButton \n                        onClick={this.handleContinueButton}>\n                        SIGN UP\n                    </BigHighlightedButton>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {MainApp, setInitialAuthState} from './dibgram/auth/ui';\nimport TdLib from './dibgram/TdWeb/tdlib';\nimport './dibgram/ui/main.scss';\n\nTdLib.initializeTdLib().then(function (res) {\n    setInitialAuthState(res);\n});\nfunction App() {\n    return (\n        <div data-theme=\"classic\" id=\"app\">\n            <MainApp/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}